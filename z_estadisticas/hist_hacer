import os
import numpy as np
from tqdm import tqdm

# ðŸ”§ CONFIGURACIÃ“N MANUAL
bboxes_folder = "/home/gmanty/code/output_20s_stats/output_20s/yolo_results/tracking_pez/labels"        # Carpeta con los .txt de bounding boxes
grid_size = 30                    # NÃºmero de divisiones por eje (NxN cuadrÃ­culas)
save_path = "/home/gmanty/code/output_20s_stats/output_20s/output_20s_30"     # Archivo de salida con el histograma

def procesar_bounding_boxes(txt_path, grid_size):
    with open(txt_path, 'r') as f:
        lines = f.readlines()

    # Extraer centroides (x_center, y_center) normalizados
    centroids = [list(map(float, line.strip().split()[1:3])) for line in lines]

    grid = np.zeros((grid_size, grid_size), dtype=int)

    for x, y in centroids:
        i = min(int(y * grid_size), grid_size - 1)  # fila
        j = min(int(x * grid_size), grid_size - 1)  # columna
        grid[i, j] += 1

    return grid

def generar_histograma(bboxes_folder, grid_size, save_path):
    txt_files = sorted([f for f in os.listdir(bboxes_folder) if f.endswith(".txt")])
    histograma = []

    for txt_file in tqdm(txt_files, desc="Procesando frames"):
        grid = procesar_bounding_boxes(os.path.join(bboxes_folder, txt_file), grid_size)
        histograma.append(grid)

    histograma = np.stack(histograma)
    np.save(save_path, histograma)
    print(f"âœ… Histograma guardado en '{save_path}' con forma {histograma.shape}")

# â–¶ Ejecutar
generar_histograma(bboxes_folder, grid_size, save_path)
